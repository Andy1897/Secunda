services:
    setup:
        build:
            context: ./docker/laravel
            dockerfile: Dockerfile
        working_dir: /var/www/html
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            mysql:
                condition: service_healthy
        environment:
            COMPOSER_ALLOW_SUPERUSER: 1
            COMPOSER_PROCESS_TIMEOUT: 2000
            DB_HOST: mysql
            DB_DATABASE: ${DB_DATABASE}
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
        restart: "no"
        command: >
            bash -lc "
                [ -f .env ] || cp .env.example .env;
                if [ ! -d vendor ]; then
                  for i in 1 2 3; do \
                    composer install --no-dev --no-interaction --prefer-dist --ignore-platform-reqs && break || sleep 5; \
                  done; \
                fi; \
                php artisan key:generate --force || true; \
                php artisan migrate --force || true; \
                php artisan db:seed --force || true; \
                php artisan l5-swagger:generate || true; \
                mysql -hmysql -uroot -p\"${DB_PASSWORD}\" -e \"CREATE DATABASE IF NOT EXISTS testing CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci\" || true; \
                mysql -hmysql -uroot -p\"${DB_PASSWORD}\" -e \"GRANT ALL PRIVILEGES ON testing.* TO '${DB_USERNAME}'@'%'; FLUSH PRIVILEGES;\" || true; \
                php artisan --env=testing migrate:fresh --seed --force || true; \
                php artisan --env=testing migrate:status || true; \
            "
    laravel:
        build:
            context: ./docker/laravel
            dockerfile: Dockerfile
        user: "${WWWUSER}:${WWWGROUP}"
        working_dir: /var/www/html
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
            - './entrypoint.sh:/entrypoint.sh'
        networks:
            - sail
        depends_on:
            setup:
                condition: service_completed_successfully
            mysql:
                condition: service_healthy
        command: /entrypoint.sh

    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
            MYSQL_EXTRA_OPTIONS: '${MYSQL_EXTRA_OPTIONS}'
        volumes:
            - 'sail-mysql:/var/lib/mysql'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s

networks:
    sail:
        driver: bridge

volumes:
    sail-mysql:
        driver: local
